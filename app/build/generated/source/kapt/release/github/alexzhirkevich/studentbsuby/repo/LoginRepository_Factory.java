// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.LoginApi;
import github.alexzhirkevich.studentbsuby.util.CaptchaRecognizer;
import github.alexzhirkevich.studentbsuby.util.LoginCookieManager;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginRepository_Factory implements Factory<LoginRepository> {
  private final Provider<LoginApi> apiProvider;

  private final Provider<SharedPreferences> encryptedPreferencesProvider;

  private final Provider<SharedPreferences> preferencesProvider;

  private final Provider<CaptchaRecognizer> captchaRecognizerProvider;

  private final Provider<LoginCookieManager> loginCookieManagerProvider;

  public LoginRepository_Factory(Provider<LoginApi> apiProvider,
      Provider<SharedPreferences> encryptedPreferencesProvider,
      Provider<SharedPreferences> preferencesProvider,
      Provider<CaptchaRecognizer> captchaRecognizerProvider,
      Provider<LoginCookieManager> loginCookieManagerProvider) {
    this.apiProvider = apiProvider;
    this.encryptedPreferencesProvider = encryptedPreferencesProvider;
    this.preferencesProvider = preferencesProvider;
    this.captchaRecognizerProvider = captchaRecognizerProvider;
    this.loginCookieManagerProvider = loginCookieManagerProvider;
  }

  @Override
  public LoginRepository get() {
    return newInstance(apiProvider.get(), encryptedPreferencesProvider.get(), preferencesProvider.get(), captchaRecognizerProvider.get(), loginCookieManagerProvider.get());
  }

  public static LoginRepository_Factory create(Provider<LoginApi> apiProvider,
      Provider<SharedPreferences> encryptedPreferencesProvider,
      Provider<SharedPreferences> preferencesProvider,
      Provider<CaptchaRecognizer> captchaRecognizerProvider,
      Provider<LoginCookieManager> loginCookieManagerProvider) {
    return new LoginRepository_Factory(apiProvider, encryptedPreferencesProvider, preferencesProvider, captchaRecognizerProvider, loginCookieManagerProvider);
  }

  public static LoginRepository newInstance(LoginApi api, SharedPreferences encryptedPreferences,
      SharedPreferences preferences, CaptchaRecognizer captchaRecognizer,
      LoginCookieManager loginCookieManager) {
    return new LoginRepository(api, encryptedPreferences, preferences, captchaRecognizer, loginCookieManager);
  }
}
