// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.ProfileApi;
import github.alexzhirkevich.studentbsuby.dao.UsersDao;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<UsersDao> daoProvider;

  private final Provider<ProfileApi> apiProvider;

  private final Provider<UsernameProvider> usernameProvider;

  public UserRepository_Factory(Provider<UsersDao> daoProvider, Provider<ProfileApi> apiProvider,
      Provider<UsernameProvider> usernameProvider) {
    this.daoProvider = daoProvider;
    this.apiProvider = apiProvider;
    this.usernameProvider = usernameProvider;
  }

  @Override
  public UserRepository get() {
    return newInstance(daoProvider.get(), apiProvider.get(), usernameProvider.get());
  }

  public static UserRepository_Factory create(Provider<UsersDao> daoProvider,
      Provider<ProfileApi> apiProvider, Provider<UsernameProvider> usernameProvider) {
    return new UserRepository_Factory(daoProvider, apiProvider, usernameProvider);
  }

  public static UserRepository newInstance(UsersDao dao, ProfileApi api,
      UsernameProvider usernameProvider) {
    return new UserRepository(dao, api, usernameProvider);
  }
}
