// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.ProfileApi;
import github.alexzhirkevich.studentbsuby.dao.HostelDao;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HostelRepository_Factory implements Factory<HostelRepository> {
  private final Provider<UsernameProvider> usernameProvider;

  private final Provider<ProfileApi> profileApiProvider;

  private final Provider<HostelDao> hostelDaoProvider;

  private final Provider<SharedPreferences> preferencesProvider;

  public HostelRepository_Factory(Provider<UsernameProvider> usernameProvider,
      Provider<ProfileApi> profileApiProvider, Provider<HostelDao> hostelDaoProvider,
      Provider<SharedPreferences> preferencesProvider) {
    this.usernameProvider = usernameProvider;
    this.profileApiProvider = profileApiProvider;
    this.hostelDaoProvider = hostelDaoProvider;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public HostelRepository get() {
    return newInstance(usernameProvider.get(), profileApiProvider.get(), hostelDaoProvider.get(), preferencesProvider.get());
  }

  public static HostelRepository_Factory create(Provider<UsernameProvider> usernameProvider,
      Provider<ProfileApi> profileApiProvider, Provider<HostelDao> hostelDaoProvider,
      Provider<SharedPreferences> preferencesProvider) {
    return new HostelRepository_Factory(usernameProvider, profileApiProvider, hostelDaoProvider, preferencesProvider);
  }

  public static HostelRepository newInstance(UsernameProvider usernameProvider,
      ProfileApi profileApi, HostelDao hostelDao, SharedPreferences preferences) {
    return new HostelRepository(usernameProvider, profileApi, hostelDao, preferences);
  }
}
