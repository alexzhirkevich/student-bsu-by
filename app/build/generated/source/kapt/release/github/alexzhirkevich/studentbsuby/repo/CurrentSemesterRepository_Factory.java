// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.ProfileApi;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrentSemesterRepository_Factory implements Factory<CurrentSemesterRepository> {
  private final Provider<UsernameProvider> usernameProvider;

  private final Provider<ProfileApi> profileApiProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public CurrentSemesterRepository_Factory(Provider<UsernameProvider> usernameProvider,
      Provider<ProfileApi> profileApiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.usernameProvider = usernameProvider;
    this.profileApiProvider = profileApiProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public CurrentSemesterRepository get() {
    return newInstance(usernameProvider.get(), profileApiProvider.get(), sharedPreferencesProvider.get());
  }

  public static CurrentSemesterRepository_Factory create(
      Provider<UsernameProvider> usernameProvider, Provider<ProfileApi> profileApiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new CurrentSemesterRepository_Factory(usernameProvider, profileApiProvider, sharedPreferencesProvider);
  }

  public static CurrentSemesterRepository newInstance(UsernameProvider usernameProvider,
      ProfileApi profileApi, SharedPreferences sharedPreferences) {
    return new CurrentSemesterRepository(usernameProvider, profileApi, sharedPreferences);
  }
}
