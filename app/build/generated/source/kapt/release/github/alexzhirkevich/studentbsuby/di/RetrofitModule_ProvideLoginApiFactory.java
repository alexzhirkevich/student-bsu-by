// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import github.alexzhirkevich.studentbsuby.api.LoginApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideLoginApiFactory implements Factory<LoginApi> {
  private final RetrofitModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RetrofitModule_ProvideLoginApiFactory(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public LoginApi get() {
    return provideLoginApi(module, retrofitProvider.get());
  }

  public static RetrofitModule_ProvideLoginApiFactory create(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    return new RetrofitModule_ProvideLoginApiFactory(module, retrofitProvider);
  }

  public static LoginApi provideLoginApi(RetrofitModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideLoginApi(retrofit));
  }
}
