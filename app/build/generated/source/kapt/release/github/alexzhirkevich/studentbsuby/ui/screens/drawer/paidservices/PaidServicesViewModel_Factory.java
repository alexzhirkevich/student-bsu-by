// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.ui.screens.drawer.paidservices;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.repo.PaidServicesRepository;
import github.alexzhirkevich.studentbsuby.util.logger.Logger;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PaidServicesViewModel_Factory implements Factory<PaidServicesViewModel> {
  private final Provider<PaidServicesRepository> repoProvider;

  private final Provider<Context> contextProvider;

  private final Provider<Logger> loggerProvider;

  public PaidServicesViewModel_Factory(Provider<PaidServicesRepository> repoProvider,
      Provider<Context> contextProvider, Provider<Logger> loggerProvider) {
    this.repoProvider = repoProvider;
    this.contextProvider = contextProvider;
    this.loggerProvider = loggerProvider;
  }

  @Override
  public PaidServicesViewModel get() {
    return newInstance(repoProvider.get(), contextProvider.get(), loggerProvider.get());
  }

  public static PaidServicesViewModel_Factory create(Provider<PaidServicesRepository> repoProvider,
      Provider<Context> contextProvider, Provider<Logger> loggerProvider) {
    return new PaidServicesViewModel_Factory(repoProvider, contextProvider, loggerProvider);
  }

  public static PaidServicesViewModel newInstance(PaidServicesRepository repo, Context context,
      Logger logger) {
    return new PaidServicesViewModel(repo, context, logger);
  }
}
