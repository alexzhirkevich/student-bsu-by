// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.di;

import android.net.Uri;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final RetrofitModule module;

  private final Provider<OkHttpClient> httpClientProvider;

  private final Provider<Uri> baeUriProvider;

  public RetrofitModule_ProvideRetrofitFactory(RetrofitModule module,
      Provider<OkHttpClient> httpClientProvider, Provider<Uri> baeUriProvider) {
    this.module = module;
    this.httpClientProvider = httpClientProvider;
    this.baeUriProvider = baeUriProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofit(module, httpClientProvider.get(), baeUriProvider.get());
  }

  public static RetrofitModule_ProvideRetrofitFactory create(RetrofitModule module,
      Provider<OkHttpClient> httpClientProvider, Provider<Uri> baeUriProvider) {
    return new RetrofitModule_ProvideRetrofitFactory(module, httpClientProvider, baeUriProvider);
  }

  public static Retrofit provideRetrofit(RetrofitModule instance, OkHttpClient httpClient,
      Uri baeUri) {
    return Preconditions.checkNotNullFromProvides(instance.provideRetrofit(httpClient, baeUri));
  }
}
