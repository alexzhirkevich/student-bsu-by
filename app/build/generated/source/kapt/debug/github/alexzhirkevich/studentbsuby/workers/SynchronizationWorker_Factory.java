// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.workers;

import android.content.Context;
import androidx.work.WorkerParameters;
import dagger.internal.DaggerGenerated;
import github.alexzhirkevich.studentbsuby.repo.HostelRepository;
import github.alexzhirkevich.studentbsuby.repo.LoginRepository;
import github.alexzhirkevich.studentbsuby.repo.TimetableRepository;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SynchronizationWorker_Factory {
  private final Provider<HostelRepository> hostelRepositoryProvider;

  private final Provider<TimetableRepository> timetableRepositoryProvider;

  private final Provider<LoginRepository> loginRepositoryProvider;

  public SynchronizationWorker_Factory(Provider<HostelRepository> hostelRepositoryProvider,
      Provider<TimetableRepository> timetableRepositoryProvider,
      Provider<LoginRepository> loginRepositoryProvider) {
    this.hostelRepositoryProvider = hostelRepositoryProvider;
    this.timetableRepositoryProvider = timetableRepositoryProvider;
    this.loginRepositoryProvider = loginRepositoryProvider;
  }

  public SynchronizationWorker get(Context context, WorkerParameters parameters) {
    return newInstance(context, parameters, hostelRepositoryProvider.get(), timetableRepositoryProvider.get(), loginRepositoryProvider.get());
  }

  public static SynchronizationWorker_Factory create(
      Provider<HostelRepository> hostelRepositoryProvider,
      Provider<TimetableRepository> timetableRepositoryProvider,
      Provider<LoginRepository> loginRepositoryProvider) {
    return new SynchronizationWorker_Factory(hostelRepositoryProvider, timetableRepositoryProvider, loginRepositoryProvider);
  }

  public static SynchronizationWorker newInstance(Context context, WorkerParameters parameters,
      HostelRepository hostelRepository, TimetableRepository timetableRepository,
      LoginRepository loginRepository) {
    return new SynchronizationWorker(context, parameters, hostelRepository, timetableRepository, loginRepository);
  }
}
