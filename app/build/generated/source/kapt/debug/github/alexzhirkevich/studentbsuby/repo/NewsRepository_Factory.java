// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import android.net.Uri;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.ProfileApi;
import github.alexzhirkevich.studentbsuby.dao.NewsDao;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsRepository_Factory implements Factory<NewsRepository> {
  private final Provider<ProfileApi> apiProvider;

  private final Provider<NewsDao> daoProvider;

  private final Provider<Uri> baseUrlProvider;

  public NewsRepository_Factory(Provider<ProfileApi> apiProvider, Provider<NewsDao> daoProvider,
      Provider<Uri> baseUrlProvider) {
    this.apiProvider = apiProvider;
    this.daoProvider = daoProvider;
    this.baseUrlProvider = baseUrlProvider;
  }

  @Override
  public NewsRepository get() {
    return newInstance(apiProvider.get(), daoProvider.get(), baseUrlProvider.get());
  }

  public static NewsRepository_Factory create(Provider<ProfileApi> apiProvider,
      Provider<NewsDao> daoProvider, Provider<Uri> baseUrlProvider) {
    return new NewsRepository_Factory(apiProvider, daoProvider, baseUrlProvider);
  }

  public static NewsRepository newInstance(ProfileApi api, NewsDao dao, Uri baseUrl) {
    return new NewsRepository(api, dao, baseUrl);
  }
}
