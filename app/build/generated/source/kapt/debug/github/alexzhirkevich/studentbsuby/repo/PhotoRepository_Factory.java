// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.repo;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.api.ProfileApi;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhotoRepository_Factory implements Factory<PhotoRepository> {
  private final Provider<ProfileApi> profileApiProvider;

  private final Provider<UsernameProvider> usernameProvider;

  private final Provider<Context> contextProvider;

  public PhotoRepository_Factory(Provider<ProfileApi> profileApiProvider,
      Provider<UsernameProvider> usernameProvider, Provider<Context> contextProvider) {
    this.profileApiProvider = profileApiProvider;
    this.usernameProvider = usernameProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public PhotoRepository get() {
    return newInstance(profileApiProvider.get(), usernameProvider.get(), contextProvider.get());
  }

  public static PhotoRepository_Factory create(Provider<ProfileApi> profileApiProvider,
      Provider<UsernameProvider> usernameProvider, Provider<Context> contextProvider) {
    return new PhotoRepository_Factory(profileApiProvider, usernameProvider, contextProvider);
  }

  public static PhotoRepository newInstance(ProfileApi profileApi,
      UsernameProvider usernameProvider, Context context) {
    return new PhotoRepository(profileApi, usernameProvider, context);
  }
}
