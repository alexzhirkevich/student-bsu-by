// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.di;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import github.alexzhirkevich.studentbsuby.repo.UsernameProvider;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideUsernameProviderFactory implements Factory<UsernameProvider> {
  private final AppModule module;

  private final Provider<SharedPreferences> preferencesProvider;

  public AppModule_ProvideUsernameProviderFactory(AppModule module,
      Provider<SharedPreferences> preferencesProvider) {
    this.module = module;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public UsernameProvider get() {
    return provideUsernameProvider(module, preferencesProvider.get());
  }

  public static AppModule_ProvideUsernameProviderFactory create(AppModule module,
      Provider<SharedPreferences> preferencesProvider) {
    return new AppModule_ProvideUsernameProviderFactory(module, preferencesProvider);
  }

  public static UsernameProvider provideUsernameProvider(AppModule instance,
      SharedPreferences preferences) {
    return Preconditions.checkNotNullFromProvides(instance.provideUsernameProvider(preferences));
  }
}
