// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.ui.screens.drawer.hostel;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import github.alexzhirkevich.studentbsuby.repo.HostelRepository;
import github.alexzhirkevich.studentbsuby.util.logger.Logger;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HostelViewModel_Factory implements Factory<HostelViewModel> {
  private final Provider<HostelRepository> hostelRepositoryProvider;

  private final Provider<Context> contextProvider;

  private final Provider<Logger> loggerProvider;

  public HostelViewModel_Factory(Provider<HostelRepository> hostelRepositoryProvider,
      Provider<Context> contextProvider, Provider<Logger> loggerProvider) {
    this.hostelRepositoryProvider = hostelRepositoryProvider;
    this.contextProvider = contextProvider;
    this.loggerProvider = loggerProvider;
  }

  @Override
  public HostelViewModel get() {
    return newInstance(hostelRepositoryProvider.get(), contextProvider.get(), loggerProvider.get());
  }

  public static HostelViewModel_Factory create(Provider<HostelRepository> hostelRepositoryProvider,
      Provider<Context> contextProvider, Provider<Logger> loggerProvider) {
    return new HostelViewModel_Factory(hostelRepositoryProvider, contextProvider, loggerProvider);
  }

  public static HostelViewModel newInstance(HostelRepository hostelRepository, Context context,
      Logger logger) {
    return new HostelViewModel(hostelRepository, context, logger);
  }
}
