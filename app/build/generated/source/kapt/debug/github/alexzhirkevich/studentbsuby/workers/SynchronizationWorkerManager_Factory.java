// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.workers;

import androidx.work.WorkManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SynchronizationWorkerManager_Factory implements Factory<SynchronizationWorkerManager> {
  private final Provider<WorkManager> workManagerProvider;

  public SynchronizationWorkerManager_Factory(Provider<WorkManager> workManagerProvider) {
    this.workManagerProvider = workManagerProvider;
  }

  @Override
  public SynchronizationWorkerManager get() {
    return newInstance(workManagerProvider.get());
  }

  public static SynchronizationWorkerManager_Factory create(
      Provider<WorkManager> workManagerProvider) {
    return new SynchronizationWorkerManager_Factory(workManagerProvider);
  }

  public static SynchronizationWorkerManager newInstance(WorkManager workManager) {
    return new SynchronizationWorkerManager(workManager);
  }
}
