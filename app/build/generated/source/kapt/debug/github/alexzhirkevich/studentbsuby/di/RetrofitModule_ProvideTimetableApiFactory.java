// Generated by Dagger (https://dagger.dev).
package github.alexzhirkevich.studentbsuby.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import github.alexzhirkevich.studentbsuby.api.TimetableApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideTimetableApiFactory implements Factory<TimetableApi> {
  private final RetrofitModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RetrofitModule_ProvideTimetableApiFactory(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public TimetableApi get() {
    return provideTimetableApi(module, retrofitProvider.get());
  }

  public static RetrofitModule_ProvideTimetableApiFactory create(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    return new RetrofitModule_ProvideTimetableApiFactory(module, retrofitProvider);
  }

  public static TimetableApi provideTimetableApi(RetrofitModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideTimetableApi(retrofit));
  }
}
